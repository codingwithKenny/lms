name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main 
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Set environment variables 
        run: |
          echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' >> .env.production
          echo 'NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}' >> .env.production
          echo 'CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}' >> .env.production
          echo 'NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL }}' >> .env.production
          echo 'NEXT_PUBLIC_CLERK_AFTER_SIGN_OUT_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_OUT_URL }}' >> .env.production
          echo 'NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}' >> .env.production
          echo 'NEXT_PUBLIC_CLOUDINARY_API_KEY=${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}' >> .env.production



      - name: Print contents of .env.production file
        run: cat .env.production

      - name: Build Next.js app
        run: npm run build

      - name: Deploy to VPS via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: '.next/'
          target: ${{ secrets.VPS_DEPLOY_PATH }}
          strip_components: 1

      - name: Run remote commands on VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ secrets.VPS_DEPLOY_PATH }}
            npm install --production 
            pm2 restart ${{ secrets.PM2_APP_NAME }} || pm2 start npm --name ${{ secrets.PM2_APP_NAME }} -- start
            pm2 save